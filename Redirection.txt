I/O REDIRECTION

    - We can redirect the input and output of commands to and from files.
    - Connect ultiple command together into powerfull command pipelines.

            cat - concatenate files
            sort - sort lines of text
            uniq - report or omit repeated lines
            grep - print lines matching a pattern
            wc - print newline, word, and byte counts for each files
            head - output the first part of a files
            tail - output the last part of a files
            tee - read from strandard output and write to standard output and files.

STANDARD INPUT OUTPUT AND ERROR
- command results are sent to a special file called Standard output (stdout)
- Command errors are sent to a special file called standard error (stderr)
    - By default, both stdout and stdin are linked to the screen and not saved to the disk



- To redirect stdout to a file we se '>' followed by the name of the file.
    - Tell the shell to semd the putput of the las command to the ls-output.txt in stead of the screen

        >> ls > ls-output.txt

- Redirecting standard error lacks the ease of a dedicated redirection operator.
- While we have refered to the forst three file streams as standard input, standard output and standard error,
the shell references them internally as file descriptors 0, 1 and 2 respectively.
- The shell provide sa notation for redirecting files using teh file descriptor number.
- Since the standard error is the same as file descriptor number 2, we can redirect stderr as follows
    >> ls -l /directory/path 2> ls_error.tx


REDIRECTING STANDARD OUTPUT AD STANDARD ERROR TO ONE file
    >> ls -l /directory/path > ls_output.txt 2>&1

    - Using this method, we redirect standard output to the file ls_output.txt and then we redirect
    the file descriptor 2 stderr to file descriptor 1 stdin using the  notation 2>&1

    >> ls -l /directory/path &> ls_output.txt

    - we use the notation &> to redirect both the stdout and stderr to a single file


DISPOSING OF UNWANTED OUTPUT
    - Redirectimg output to a special file called "/dev/null"
    - To supress error meaasges from a command,
        >> ls -l /directory/path 2> /dev/null


REDIRECTING STANDARD INPUT
    - The cat command reads one or more files and copies them to standard output.
        >> cat file



THE PIPELINE OPERATOR 
    - Using the pipeline operator, the stdout of one command can be piped to the stdin of another
        >> command1 | command2 


FILTERS
    - Filters take input, change it somehow, and then output it.
    - Imagine we wanted to make a combined list of all the executable programs in /bin and /usr/bin, put them in sorted order and view the resulting list.

        >> ls /bin /usr/bin | sort | less

        - lis the contents of /bin and /usr/bin together
        - Sort the list
        - show tyhe reesult



WC COMMAND 
    - Used to display the number of lines, words and bytes contained in files
        >> wc ls_output.txt
        16  81  526
        lines   words   bytes

    - To see the number of items in our sorted list,
        >> ls /./ /../ | sort | uniq | wc -l 


GREP 
    - Used to find text patterns within files 
        >> grep pattern file

    - Whe  grep encounters a pattern in the file, it prints out the pines containing it.


HEAD / TAIL 
    - By default both commands print ten lines unless adjusted by using the '-n' option
        >> tail -n 5


EXPANSION
    - Echo - prints text arguments to stdout


    BRACE EXPANSION 
        - We can create multiple text strings from a pattern containing braces.

            >> echo Front-{A..C}-Back
            Front-A-Back Front-B-Back Front-C-Back

            >> echo {00..15}
            00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15

            >> echo {Z..A}
            Z Y X W V U T S R Q P O N M L K J I H G F E D C B A



        - Brace expansions may be nested.
            >> echo a{A{1..2}, B{3..4}}b
            aA1b aA2b aB3b aB4b


        - The most common application is to make lists of files or directories to be created.
            >> mkdir {1..31}-{1..12}-2023
                - Creates directories 1 to 31 of 1 to 12 of 2023

PARAMETER EXPANSION
    - 



COMMAND SUBSTITUTION
    - Allows us to use the outputof a command as an expression.
        >> echo $(ls)


QUOTING
    Double Qoutes
        - If we place text inside double quotes, all the special characters lose their special meaning and  are treated as ordinary
        characters.

    Single quotes
        - Supresses all expansions

ESCAPING CHARACTERS 
    - Predeeing a character with a backlash.
    - Often done inside double quotes to selectively supress an expansion.
    - To allow a backlash character to appear, we escape it by typing \\